{"ast":null,"code":"var _jsxFileName = \"D:\\\\ProyectoComponentes\\\\ProyectoComponentes\\\\client\\\\src\\\\App.js\";\nimport './App.css';\nimport Users from './components/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 1\n  }, this);\n}\n_c = App;\nconst CosmosClient = require('@azure/cosmos').CosmosClient;\nconst config = require('./config');\nconst TaskList = require('./routes/tasklist');\nconst TaskDao = require('./models/taskDao');\nconst express = require('express');\nconst path = require('path');\nconst logger = require('morgan');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n//Todo App:\nconst cosmosClient = new CosmosClient({\n  endpoint: config.host,\n  key: config.authKey\n});\nconst taskDao = new TaskDao(cosmosClient, config.databaseId, config.containerId);\nconst taskList = new TaskList(taskDao);\ntaskDao.init(err => {\n  console.error(err);\n}).catch(err => {\n  console.error(err);\n  console.error('Shutting down because there was an error settinig up the database.');\n  process.exit(1);\n});\napp.get('/', (req, res, next) => taskList.showTasks(req, res).catch(next));\napp.post('/addtask', (req, res, next) => taskList.addTask(req, res).catch(next));\napp.post('/completetask', (req, res, next) => taskList.completeTask(req, res).catch(next));\napp.set('view engine', 'jade');\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Users","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","CosmosClient","require","config","TaskList","TaskDao","express","path","logger","cookieParser","bodyParser","app","set","join","__dirname","use","json","urlencoded","extended","static","cosmosClient","endpoint","host","key","authKey","taskDao","databaseId","containerId","taskList","init","err","console","error","catch","process","exit","get","req","res","next","showTasks","post","addTask","completeTask","Error","status","locals","message","render","module","exports","$RefreshReg$"],"sources":["D:/ProyectoComponentes/ProyectoComponentes/client/src/App.js"],"sourcesContent":["import './App.css';\nimport Users from './components/User';\n\nfunction App() {\nreturn (\n<Users />\n );\n}\n\nconst CosmosClient = require('@azure/cosmos').CosmosClient\n const config = require('./config')\n const TaskList = require('./routes/tasklist')\n const TaskDao = require('./models/taskDao')\n\n const express = require('express')\n const path = require('path')\n const logger = require('morgan')\n const cookieParser = require('cookie-parser')\n const bodyParser = require('body-parser')\n\n const app = express()\n\n // view engine setup\n app.set('views', path.join(__dirname, 'views'))\n app.set('view engine', 'jade')\n\n // uncomment after placing your favicon in /public\n //app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n app.use(logger('dev'))\n app.use(bodyParser.json())\n app.use(bodyParser.urlencoded({ extended: false }))\n app.use(cookieParser())\n app.use(express.static(path.join(__dirname, 'public')))\n\n //Todo App:\n const cosmosClient = new CosmosClient({\n   endpoint: config.host,\n   key: config.authKey\n })\n const taskDao = new TaskDao(cosmosClient, config.databaseId, config.containerId)\n const taskList = new TaskList(taskDao)\n taskDao\n   .init(err => {\n     console.error(err)\n   })\n   .catch(err => {\n     console.error(err)\n     console.error(\n       'Shutting down because there was an error settinig up the database.'\n     )\n     process.exit(1)\n   })\n\n app.get('/', (req, res, next) => taskList.showTasks(req, res).catch(next))\n app.post('/addtask', (req, res, next) => taskList.addTask(req, res).catch(next))\n app.post('/completetask', (req, res, next) =>\n   taskList.completeTask(req, res).catch(next)\n )\n app.set('view engine', 'jade')\n\n // catch 404 and forward to error handler\n app.use(function(req, res, next) {\n   const err = new Error('Not Found')\n   err.status = 404\n   next(err)\n })\n\n // error handler\n app.use(function(err, req, res, next) {\n   // set locals, only providing error in development\n   res.locals.message = err.message\n   res.locals.error = req.app.get('env') === 'development' ? err : {}\n\n   // render the error page\n   res.status(err.status || 500)\n   res.render('error')\n })\n\n module.exports = app\n\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}